#!/usr/bin/env bash

# docker pull test
# latency test
# throughput test
# resource test: external hosts:



1_project_test(){
    local action=test
    local name="project test"
    local description="tests if the project env var is set"
    local status=""
    local message=""
    printf "\n"
    printf "  Test: %s\n" "${name}"
    printf "    Description: %s\n" "${description}"
    printf "    Project: %s\n" "${project}"
    if [ -n "${project+x}" ] && [ -n "$project" ]; then
        message="The project env var is set and is not empty"
        printf "    Message: %s\n" "${message}"
        status=$(bold $(green "PASSED"))
        printf "    Status: %s: %s\n" "${action}" "${status}"
    else
        message="The project env var is empty or not set"
        printf "    Message: %s\n" "${message}"
        status=$(bold $(red "FAILED"))
        printf "    Status: %s: %s\n" "${action}" "${status}"
        exit 1
    fi
}

build_artifact_test(){
    local action=test
    local name="build artifact test"
    local description="tests if required build artifacts were generated"
    local message=""
    local exit_code=0
    printf "\n"
    printf "  Test: %s\n" "${name}"
    printf "    Description: %s\n" "${description}"
    printf "    Build artifacts: \n"
    for build_artifact in "${build_artifacts[@]}"; do
        if compgen -G "${build_artifact}" > /dev/null; then
            printf "      Build artifact: %-95s %s\n" "${build_artifact}" "$(bold $(green "EXISTS"))" 
        else
            printf "      Build artifact: %-95s %s\n" "${build_artifact}" "$(bold "$(red "DOES NOT EXIST")")" 
            exit_code=1
        fi
    done
    if [[ $exit_code == 0 ]]; then
        message="all build artifacts exist"
        printf "    Message: %s\n" "${message}" 
        status=$(bold $(green "PASSED")) 
        printf "    Status: %s: %s\n" "${action}" "${status}" 
    else
        message="Build artifacts missing"
        printf "    Message: %s\n" "${message}"
        status=$(bold $(red "FAILED"))
        printf "    Status: %s\n" "${status}"
    fi
    exit $exit_code
}

